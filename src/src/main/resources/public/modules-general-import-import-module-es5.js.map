{"version":3,"sources":["webpack:///src/app/modules/application/ui-core/alerts/alert.service.ts","webpack:///src/app/modules/general/import/import.component.ts","webpack:///src/app/modules/general/import/import.component.html","webpack:///src/app/modules/application/ui-core/alerts/alert.module.ts","webpack:///src/app/modules/application/ui-core/alerts/alert.component.ts","webpack:///src/app/modules/application/ui-core/alerts/alert.component.html","webpack:///src/app/modules/general/import/import-routing.module.ts","webpack:///src/app/modules/general/import/import.module.ts","webpack:///src/app/modules/application/ui-core/alerts/alert.ts","webpack:///src/app/modules/application/ui-core/alerts/alert.settings.ts"],"names":["AlertService","subject","defaultId","id","asObservable","pipe","x","message","options","alert","alertType","SUCCESS","ERROR","INFO","WARNING","next","ImportComponent","alertService","lrdbService","fileToUpload","files","item","filePath","name","uploadFile","then","data","success","autoClose","fileUI","nativeElement","value","err","error","handleFileInput","upload","AlertModule","AlertComponent","router","fade","alerts","alertSubscription","onAlert","subscribe","push","setTimeout","removeAlert","routeSubscription","events","event","clear","unsubscribe","includes","find","filter","classes","alertTypeClass","join","routes","path","component","ImportRoutingModule","forChild","ImportModule","Alert","init","Object","assign","AlertSettings"],"mappings":"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","file":"modules-general-import-import-module-es5.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {filter} from 'rxjs/operators';\r\nimport {Alert} from './alert';\r\nimport {AlertSettings} from './alert.settings';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlertService {\r\n  private subject = new BehaviorSubject<Alert>(null);\r\n  private defaultId = 'default-alert';\r\n\r\n  onAlert(id = this.defaultId): Observable<Alert> {\r\n    return this.subject.asObservable().pipe(filter(x => x && x.id === id));\r\n  }\r\n\r\n  success(message: string, options?: any) {\r\n    this.alert(new Alert({ ...options, alertType: AlertSettings.SUCCESS, message }));\r\n  }\r\n\r\n  error(message: string, options?: any) {\r\n    this.alert(new Alert({ ...options, alertType: AlertSettings.ERROR, message }));\r\n  }\r\n\r\n  info(message: string, options?: any) {\r\n    this.alert(new Alert({ ...options, alertType: AlertSettings.INFO, message }));\r\n  }\r\n\r\n  warn(message: string, options?: any) {\r\n    this.alert(new Alert({ ...options, alertType: AlertSettings.WARNING, message }));\r\n  }\r\n\r\n  alert(alert: Alert) {\r\n    alert.id = alert.id || this.defaultId;\r\n    this.subject.next(alert);\r\n  }\r\n\r\n  clear(id = this.defaultId) {\r\n    this.subject.next(new Alert({ id }));\r\n  }\r\n}","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {BackendService} from 'src/app/_services/import.service';\r\nimport {AlertService} from '../../application/ui-core/alerts/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-import',\r\n  templateUrl: './import.component.html',\r\n  styleUrls: ['./import.component.css']\r\n})\r\nexport class ImportComponent implements OnInit {\r\n  @ViewChild('fileUI') fileUI: ElementRef\r\n  fileToUpload: File = null;\r\n  filePath: string;\r\n  constructor(private alertService: AlertService, private lrdbService: BackendService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  handleFileInput(files: FileList) {\r\n    this.fileToUpload = files.item(0);\r\n    this.filePath = this.fileToUpload.name\r\n\r\n  }\r\n\r\n  upload() {\r\n    this.lrdbService.uploadFile(this.fileToUpload).then(data => {\r\n      this.alertService.success('File uploaded successfully.',\r\n        { autoClose: true }\r\n      );\r\n      this.filePath = ''\r\n      this.fileToUpload = null\r\n      this.fileUI.nativeElement.value = ''\r\n\r\n    }, err => {\r\n      this.alertService.error('file upload error.',\r\n        { autoClose: true }\r\n      );\r\n\r\n    })\r\n\r\n  }\r\n\r\n}\r\n","<body class=\"sb-nav-fixed\">\r\n  <app-header></app-header>\r\n  <div id=\"layoutSidenav\">\r\n    <div id=\"layoutSidenav_nav\">\r\n      <app-menu></app-menu>\r\n    </div>\r\n    <div id=\"layoutSidenav_content\">\r\n      <main>\r\n        <div class=\"container-fluid\">\r\n          <alert></alert>\r\n          <h1 class=\"breadcrumb-title mt-4\">Import File</h1>\r\n          <ol class=\"breadcrumb mb-4\">\r\n            <li class=\"breadcrumb-item\"><a href=\"index.html\">Dashboard</a></li>\r\n            <li class=\"breadcrumb-item active\">Import File</li>\r\n          </ol>\r\n          <div class=\"card mb-4\">\r\n            <div class=\"card-body\">\r\n              <div class=\"custom-file\" id=\"customFile\" lang=\"en\">\r\n                <p class=\"mb-0\">\r\n                  <input type=\"file\" #fileUI value=\"upload\" class=\"custom-file-input\" (change)=\"handleFileInput($event.target.files)\"\r\n                    id=\"exampleInputFile\" aria-describedby=\"fileHelp\">\r\n                  <label class=\"custom-file-label\" for=\"exampleInputFile\">\r\n                    {{filePath}}\r\n                  </label>\r\n                </p>\r\n                <br/>\r\n                <p class=\"mb-0\">\r\n                  <button class=\"btn btn-primary\" (click)=\"upload()\">Update</button>\r\n                </p>\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </main>\r\n      <app-footer></app-footer>\r\n    </div>\r\n  </div>\r\n  <script src=\"src/assets/js/scripts.js\"></script>\r\n</body>","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {AlertComponent} from './alert.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [AlertComponent],\r\n  exports: [AlertComponent]\r\n})\r\nexport class AlertModule { }","import {Component, Input, OnDestroy, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {NavigationStart, Router} from '@angular/router';\r\nimport {Subscription} from 'rxjs';\r\nimport {Alert} from './alert';\r\nimport {AlertService} from './alert.service';\r\nimport {AlertSettings} from './alert.settings';\r\n\r\n@Component({\r\n  selector: 'alert',\r\n  templateUrl: 'alert.component.html',\r\n  styleUrls: ['./alert.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n  @Input() id = 'default-alert';\r\n  @Input() fade = true;\r\n\r\n  alerts: Alert[] = [];\r\n  alertSubscription: Subscription;\r\n  routeSubscription: Subscription;\r\n\r\n  constructor(private router: Router, private alertService: AlertService) { }\r\n\r\n  ngOnInit() {\r\n    this.alertSubscription = this.alertService.onAlert(this.id)\r\n      .subscribe(alert => {\r\n        if (!alert.message) {\r\n          this.alerts = [];\r\n          return;\r\n        }\r\n\r\n        this.alerts.push(alert);\r\n\r\n        if (alert.autoClose) {\r\n          setTimeout(() => this.removeAlert(alert), 3000);\r\n        }\r\n      }\r\n    );\r\n\r\n    // clear alerts on location change\r\n    this.routeSubscription = this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationStart) {\r\n        this.alertService.clear(this.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // unsubscribe to avoid memory leaks\r\n    this.alertSubscription.unsubscribe();\r\n    this.routeSubscription.unsubscribe();\r\n  }\r\n\r\n  removeAlert(alert: Alert) {\r\n    if (!this.alerts.includes(alert)) return;\r\n\r\n    if (this.fade) {\r\n      this.alerts.find(x => x === alert).fade = true;\r\n\r\n      setTimeout(() => {\r\n          this.alerts = this.alerts.filter(x => x !== alert);\r\n      }, 250);\r\n    } else {\r\n      this.alerts = this.alerts.filter(x => x !== alert);\r\n    }\r\n  }\r\n\r\n  cssClass(alert: Alert) {\r\n    if (!alert) return;\r\n\r\n    const classes = ['alert', 'alert-dismissable'];\r\n                \r\n    const alertTypeClass = {\r\n      [AlertSettings.SUCCESS]: 'alert alert-success',\r\n      [AlertSettings.ERROR]: 'alert alert-danger',\r\n      [AlertSettings.INFO]: 'alert alert-info',\r\n      [AlertSettings.WARNING]: 'alert alert-warning'\r\n    }\r\n\r\n    classes.push(alertTypeClass[alert.alertType]);\r\n\r\n    if (alert.fade) {\r\n      classes.push('fade');\r\n    }\r\n\r\n    return classes.join(' ');\r\n  }\r\n}","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\"\r\n    style=\"display: flex; text-align: center; width: 50%; margin: 0 auto\">\r\n    <div class=\"message-div\"><span [innerHTML]=\"alert.message\"></span></div>\r\n    <div class=\"close-div\"><a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a></div>\r\n</div>","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ImportComponent} from './import.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ImportComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ImportRoutingModule { }\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {ImportComponent} from './import.component';\r\nimport {ImportRoutingModule} from './import-routing.module';\r\nimport {BaseModule} from '../../base/base.module';\r\nimport {AlertModule} from '../../application/ui-core/alerts/alert.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AlertModule,\r\n    CommonModule,\r\n    ImportRoutingModule,\r\n    BaseModule\r\n  ],\r\n  exports: [\r\n    ImportComponent\r\n  ],\r\n  declarations: [\r\n    ImportComponent\r\n  ],\r\n  providers: [\r\n  ],\r\n})\r\nexport class ImportModule { }\r\n","export class Alert {\r\n    id: string;\r\n    message: string;\r\n    autoClose: boolean;\r\n    fade: boolean;\r\n    alertType: string;\r\n  \r\n    constructor(init?:Partial<Alert>) {\r\n      Object.assign(this, init);\r\n    }\r\n  }","export class AlertSettings {\r\n    public static SUCCESS = \"success\";\r\n    public static ERROR = \"error\";\r\n    public static INFO = \"info\";\r\n    public static WARNING = \"warning\";\r\n  }"]}