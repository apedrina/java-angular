{"version":3,"sources":["./src/app/modules/general/login/login-routing.module.ts","./src/app/modules/general/login/login.module.ts","./src/app/modules/general/login/login.component.ts","./src/app/modules/general/login/login.component.html"],"names":[],"mappings":"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","file":"modules-general-login-login-module-es2015.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {LoginComponent} from './login.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {LoginComponent} from './login.component';\r\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport {ErrorInterceptor} from 'src/app/_helpers';\r\nimport {LoginRoutingModule} from './login-routing.module';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports: [\r\n    LoginComponent\r\n  ],\r\n  declarations: [\r\n    LoginComponent\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    //fakeBackendProvider,\r\n  ],\r\n})\r\nexport class LoginModule { }","import {HttpClient} from '@angular/common/http';\r\nimport {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {AuthenticationService} from 'src/app/_services/authentication.service';\r\nimport {BackendService} from 'src/app/_services/import.service';\r\nimport {TokenStorageService} from 'src/app/_services/token-storage.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n    @ViewChild('button') button: ElementRef<HTMLElement>;\r\n\r\n    loginForm: FormGroup;\r\n    isLoggedIn = false;\r\n    isLoginFailed = false;\r\n    errorMessage = '';\r\n    roles: string[] = [];\r\n\r\n    constructor(private router: Router, private http: HttpClient, private lrdb: BackendService,\r\n        private authService: AuthenticationService, private tokenStorage: TokenStorageService,\r\n        private readonly fb: FormBuilder) {\r\n        this.loginForm = this.fb.group({\r\n            username: [],\r\n            password: []\r\n\r\n        });\r\n        this.init()\r\n\r\n    }\r\n\r\n    init() {\r\n\r\n    }\r\n\r\n    closeModal() {\r\n        this.errorMessage = null\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.tokenStorage.getToken()) {\r\n            this.isLoggedIn = true;\r\n            this.roles = this.tokenStorage.getUser().roles;\r\n        }\r\n\r\n    }\r\n\r\n    onSubmit(): void {\r\n        let user = this.loginForm.get('username').value;\r\n        let password = this.loginForm.get('password').value;\r\n        this.authService.login(user, password).then(\r\n            (data) => {\r\n                console.log('data:: ' + JSON.stringify(data))\r\n                let token = data.body['accessToken'];\r\n                this.tokenStorage.saveToken(token);\r\n                this.tokenStorage.saveUser(data);\r\n\r\n                this.isLoginFailed = false;\r\n                this.isLoggedIn = true;\r\n                this.roles = this.tokenStorage.getUser().roles;\r\n                this.router.navigate(['/dashboard']);\r\n            },\r\n            err => {\r\n                let el: HTMLElement = this.button.nativeElement;\r\n                el.click();\r\n                this.errorMessage = err.message;\r\n                this.isLoginFailed = true;\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    reloadPage(): void {\r\n        window.location.reload();\r\n\r\n    }\r\n\r\n}","<button type=\"button\" [hidden]=\"true\" #button  class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#loginModal\"></button>\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"loginModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"loginModalLabel\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"loginModalLabel\">Login error</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                {{errorMessage}}\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal()\" data-dismiss=\"modal\">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"col-md-6 offset-md-3 mt-5\">\r\n    <div class=\"card\">\r\n        <h4 class=\"card-header login-header\" style=\"background-color: #e20074 !important;color:whitesmoke !important\">Login</h4>\r\n        <div class=\"card-body\">\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"username\">Username</label>\r\n                    <input type=\"text\" formControlName=\"username\" class=\"form-control\" />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">Password</label>\r\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\" />\r\n                </div>\r\n                <button class=\"btn btn-primary\" type=\"submit\">\r\n                    login\r\n                </button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>"],"sourceRoot":"webpack:///"}